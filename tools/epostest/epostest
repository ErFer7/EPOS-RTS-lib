#!/bin/sh

EPOS=
APP=$EPOS/app
IMG=$EPOS/img
REP=$EPOS/report
SMODS="LIBRARY"
APPLICATIONS="hello philosophers_dinner producer_consumer"
LIBRARY_TARGETS=("IA32 PC Legacy_PC" "RV32 RISCV SiFive_E" "RV32 RISCV SiFive_U" "RV64 RISCV SiFive_U" "ARMv7 Cortex LM3S811" "ARMv7 Cortex eMote3" "ARMv7 Cortex Realview_PBX" "ARMv7 Cortex Zynq" "ARMv7 Cortex Raspberry_Pi3" "ARMv8 Cortex Raspberry_Pi3")
LIBRARY_TESTS="alarm_test segment_test active_test scheduler_dm_test scheduler_rm_test scheduler_edf_test"

NOQEMU="eMote3 Zynq"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NORMAL='\033[0m'

set -e

if [ ! -e "$REP" ] ; then
    mkdir $REP
fi

cd $EPOS

for SMOD in $SMODS ; do
    eval TARGETS=( \"\${${SMOD}_TARGETS[@]}\" )
    N_TARGETS=${#TARGETS[@]}
    eval TESTS=\"\${${SMOD}_TESTS[@]}\"
    set -- $TESTS
    TODO=$#
    set -- $APPLICATIONS
    let "TODO+=$#"

    printf "\n********************************************************************************\n"
    printf "\nPreparing test set for $N_TARGETS targets in mode $SMOD: $APPLICATIONS $TESTS\n"
    for ((i = 0; i < N_TARGETS; i++)) do
        set -- ${TARGETS[$i]}
        ARCH=$1
        MACH=$2
        MMOD=$3
        PREFIX=${SMOD,,}"-"${ARCH,,}"-"${MACH,,}"-"${MMOD,,}
        TIME=60
        for SKIPRUN in $NOQEMU ; do
            if [ "$SKIP" == "$MMOD" ] ; then
                TIME=0
            fi
        done
        
        printf "\n--------------------------------------------------------------------------------\n"
        printf "Running test set for $MMOD (a $MACH on $ARCH) in mode $SMOD\n\n"

        make veryclean &> /dev/null
        make linktest &> /dev/null

        DONE=0
        for TEST in $APPLICATIONS $TESTS ; do
            sed -e "s/^\(.*SMOD = \).*;.*$/\1$SMOD;/" -e "s/^\(.*ARCHITECTURE = \).*;.*$/\1$ARCH;/" -e "s/^\(.*MACHINE = \).*;.*$/\1$MACH;/" -e "s/^\(.*MODEL = \).*;.*$/\1$MMOD;/" -e "s/^\(.*EXPECTED_SIMULATION_TIME = \).*;.*$/\1$TIME;/" -i $APP/$TEST/$TEST""_traits.h
            if [ -e "$REP/${PREFIX}-${TEST}.out" ] ; then
              let "DONE+=1"
            fi
        done
        
        if [ $DONE -eq $TODO ] ; then
            continue
        fi

        make "APPLICATIONS=$APPLICATIONS" "TESTS=$TESTS" gittest

        for TEST in $APPLICATIONS $TESTS ; do
            mv -f $IMG/$TEST     $REP/$PREFIX"-"$TEST"" &> /dev/null || true
            mv -f $IMG/$TEST.img $REP/$PREFIX"-"$TEST".img" &> /dev/null || true
            mv -f $IMG/$TEST.out $REP/$PREFIX"-"$TEST".out" &> /dev/null || true
        done
    done
done

make veryclean &> /dev/null

printf "********************************************************************************\n"
cd $REP
printf "${GREEN}Passed:\n"
find . -name \*.out -not -empty -exec grep -l "*** The last thread under control of EPOS has finished." \{} \; | cut -c 3- | sed s/.out//
printf "\n${YELLOW}Not run:\n"
find . -name \*.out -empty -printf "%f\n" | sed s/.out//
printf "\n${RED}Failed:\n"
find . -name \*.out -not -empty -exec grep -L "*** The last thread under control of EPOS has finished." \{} \; | cut -c 3- | sed s/.out//
printf "${NORMAL}"
printf "********************************************************************************\n"
